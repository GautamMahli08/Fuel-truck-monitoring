<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>ðŸšš Fuel Truck Monitoring Dashboard</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    body { font-family: 'Courier New', Courier, monospace; background: #d4d4d4; }
    #map { height: 600px; border: 2px solid #4b3f36; border-radius: 0.25rem; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); }
    .fixed-header { background: linear-gradient(to bottom, #4b3f36, #5c4b3f); }
    .alert-enter { opacity: 0; transform: translateX(-20px); }
    .alert-enter-active { opacity: 1; transform: translateX(0); transition: opacity 300ms, transform 300ms; }
    .gauge { width: 80px; height: 40px; position: relative; background: #e5e5e5; border-radius: 50% 50% 0 0; overflow: hidden; }
    .gauge-needle { width: 2px; height: 30px; background: #e76f51; position: absolute; left: 50%; bottom: 0; transform-origin: bottom; transition: transform 0.5s; }
    .gauge-label { position: absolute; bottom: -20px; left: 50%; transform: translateX(-50%); font-size: 12px; }
  </style>
</head>
<body class="text-gray-800">
  <header class="fixed-header fixed top-0 w-full p-4 text-white shadow-md z-10">
    <div class="container mx-auto flex justify-between items-center">
      <h1 class="text-2xl font-bold flex items-center gap-2">ðŸšš Fuel Monitoring Co.</h1>
      <div class="flex gap-4">
        <button onclick="toggleSound()" id="sound-toggle" class="bg-orange-600 hover:bg-orange-700 px-3 py-1 rounded">Mute Alerts</button>
        <button onclick="fetchData()" class="bg-orange-600 hover:bg-orange-700 px-3 py-1 rounded">Refresh</button>
      </div>
    </div>
  </header>

  <div class="container mx-auto px-4 pt-24 pb-8">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <div class="lg:col-span-2">
        <div class="bg-white rounded-lg p-4">
          <div id="map"></div>
        </div>
      </div>
      <div class="lg:col-span-1">
        <div class="bg-white rounded-lg shadow p-6 mb-6">
          <h2 class="text-xl font-bold text-orange-600 mb-4">ðŸš¨ Alerts</h2>
          <ul id="alerts-list" class="space-y-3 max-h-[400px] overflow-y-auto"></ul>
        </div>
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-lg font-bold mb-4">Fleet Status</h3>
          <div id="fleet-summary" class="space-y-4"></div>
        </div>
      </div>
    </div>
    <footer class="mt-8 text-center text-gray-600 text-sm">Â© 2025 Fuel Monitoring Solutions</footer>
  </div>

  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
  <script>
    const map = L.map('map').setView([23.5859, 58.4059], 12);
    L.tileLayer('https://stamen-tiles.a.ssl.fastly.net/toner/{z}/{x}/{y}.png', {
      attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, under <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="http://openstreetmap.org">OpenStreetMap</a>, under <a href="http://www.openstreetmap.org/copyright">ODbL</a>.',
      maxZoom: 18,
    }).addTo(map);

    let markers = {};
    let soundEnabled = true;
    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();

    function playAlertSound() {
      if (!soundEnabled) return;
      const oscillator = audioCtx.createOscillator();
      oscillator.type = 'sine';
      oscillator.frequency.setValueAtTime(800, audioCtx.currentTime);
      oscillator.connect(audioCtx.destination);
      oscillator.start();
      oscillator.stop(audioCtx.currentTime + 0.2);
    }

    function toggleSound() {
      soundEnabled = !soundEnabled;
      document.getElementById('sound-toggle').textContent = soundEnabled ? 'Mute Alerts' : 'Unmute Alerts';
    }

    async function fetchData() {
      try {
        const res = await fetch('http://localhost:8000/dashboard-data');
        const data = await res.json();

        // Update markers
        data.vehicles.forEach(truck => {
          const id = truck.truck_id;
          const lat = truck.latitude;
          const lon = truck.longitude;
          const fuel = truck.fuel_level;
          const popupContent = `<div class="p-2"><h3 class="font-bold">Truck ${id}</h3><p>Fuel: ${fuel} liters</p><p>Lat: ${lat.toFixed(4)}</p><p>Lon: ${lon.toFixed(4)}</p></div>`;
          if (markers[id]) {
            markers[id].setLatLng([lat, lon]).setPopupContent(popupContent);
          } else {
            markers[id] = L.marker([lat, lon], {
              icon: L.divIcon({ html: `<div class="bg-orange-600 text-white rounded-full w-8 h-8 flex items-center justify-center">${id}</div>`, iconSize: [32, 32], iconAnchor: [16, 16] })
            }).addTo(map).bindPopup(popupContent);
          }
        });

        // Update alerts
        const alertsList = document.getElementById('alerts-list');
        alertsList.innerHTML = '';
        data.alerts.forEach(alert => {
          const severity = alert.severity || 'low';
          const color = severity === 'high' ? 'border-red-600 bg-red-100' : severity === 'medium' ? 'border-orange-600 bg-orange-100' : 'border-gray-600 bg-gray-100';
          const li = document.createElement('li');
          li.className = `alert-enter p-4 rounded-md ${color}`;
          li.innerHTML = `<span class="block text-sm font-bold">[${alert.timestamp}]</span><span class="block text-sm">Truck ${alert.truck_id}: ${alert.message}</span>`;
          alertsList.appendChild(li);
          if (severity === 'high') playAlertSound();
          setTimeout(() => li.className = `alert-enter-active p-4 rounded-md ${color}`, 10);
        });

        // Update fleet summary with gauges
        const fleetSummary = document.getElementById('fleet-summary');
        fleetSummary.innerHTML = data.vehicles.map(truck => `
          <div class="flex items-center gap-4">
            <div class="gauge">
              <div class="gauge-needle" style="transform: rotate(${(truck.fuel_level / 100) * 180 - 90}deg)"></div>
              <div class="gauge-label">Truck ${truck.truck_id}</div>
            </div>
            <p class="text-sm">${truck.fuel_level} liters</p>
          </div>
        `).join('');
      } catch (error) {
        console.error('Error:', error);
        const alertsList = document.getElementById('alerts-list');
        const li = document.createElement('li');
        li.className = 'alert-enter bg-yellow-100 p-4 rounded-md';
        li.innerHTML = `<span class="block text-sm font-bold">Error fetching data</span>`;
        alertsList.appendChild(li);
        setTimeout(() => li.className = 'alert-enter-active bg-yellow-100 p-4 rounded-md', 10);
      }
    }

    fetchData();
    setInterval(fetchData, 5000);
  </script>
</body>
</html>